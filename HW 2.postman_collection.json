{
	"info": {
		"_postman_id": "29866165-5806-4b74-870b-32041a028700",
		"name": "HW 2",
		"description": "Postman Homework 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "First",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.text();\r",
							"pm.test(\"String is correct\", function () {\r",
							"\tpm.expect(resp).to.eql(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/first",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Name is correct\", function(){\r",
							"    pm.expect(jsonData.name).to.eql(\"Sergey\")\r",
							"});\r",
							"\r",
							"pm.test(\"Age is correct\", function(){\r",
							"    pm.expect(+jsonData.age).to.eql(27)\r",
							"});\r",
							"\r",
							"pm.test(\"Salary is correct\", function(){\r",
							"    pm.expect(+jsonData.salary).to.eql(3000)\r",
							"});\r",
							"\r",
							"console.log(\"Family contains =\",jsonData.family);\r",
							"\r",
							"pm.test(\"Salary after 1.5 year is correct\", function(){\r",
							"    pm.expect(+jsonData.family.u_salary_1_5_year).to.eql(+pm.request.body.formdata.get(\"salary\") * 4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Sergey",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}:{{port}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"let requestData = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Name is correct\", function(){\r",
							"    pm.expect(jsonData.name).to.eql(requestData.name)\r",
							"});\r",
							"\r",
							"pm.test(\"Age is correct\", function(){\r",
							"    pm.expect(+jsonData.age).to.eql(+requestData.age)\r",
							"});\r",
							"\r",
							"pm.test(\"Salary is correct\", function(){\r",
							"    pm.expect(jsonData.salary).to.eql(+requestData.salary)\r",
							"});\r",
							"\r",
							"console.log(`Family contains:`,jsonData.family);\r",
							"\r",
							"pm.test(\"Dog have name\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dog have age\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dog name is Lucky\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dog age is correct\", function(){\r",
							"    pm.expect(+jsonData.family.pets.dog.age).to.eql(4)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}:{{port}}/object_info_3?name=Sergey&age=27&salary=3000",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Sergey"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"let requestData = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Name is correct\", function(){\r",
							"    pm.expect(jsonData.name).to.eql(requestData.name)\r",
							"});\r",
							"\r",
							"pm.test(\"Age is correct\", function(){\r",
							"    pm.expect(+jsonData.age).to.eql(+requestData.age)\r",
							"});\r",
							"\r",
							"console.log(+requestData.salary)\r",
							"console.log(jsonData.salary)\r",
							"console.log(+jsonData.salary[0])\r",
							"console.log(+jsonData.salary[1])\r",
							"console.log(+jsonData.salary[2])\r",
							"\r",
							"pm.test(\"Salary[0] is correct\", function(){\r",
							"    pm.expect(+jsonData.salary[0]).to.eql(+requestData.salary)\r",
							"});\r",
							"\r",
							"pm.test(\"Salary[1] is correct\", function(){\r",
							"    pm.expect(+jsonData.salary[1]).to.eql(+requestData.salary * 2)\r",
							"});\r",
							"\r",
							"pm.test(\"Salary[2] is correct\", function(){\r",
							"    pm.expect(+jsonData.salary[2]).to.eql(+requestData.salary * 3)\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", requestData.name);\r",
							"pm.environment.set(\"age\", requestData.age);\r",
							"pm.environment.set(\"salary\", requestData.salary);\r",
							"\r",
							"for (i = 0; i<jsonData.salary.length; i++){\r",
							"    console.log(`salary ${i}: ${jsonData.salary[i]}`);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/object_info_4?name=Sergey&age=27&salary=3000",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Sergey"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"let requestData = pm.request.body.formdata;\r",
							"\r",
							"pm.test(\"8: Response have property start_qa_salary\", function(){\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\")\r",
							"});\r",
							"\r",
							"pm.test(\"9: Response have property qa_salary_after_6_months\", function(){\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"10: Response have property qa_salary_after_12_months\", function(){\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\")        \r",
							"});\r",
							"\r",
							"pm.test(\"11: Response have property qa_salary_after_1.5_year\", function(){\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\")        \r",
							"});\r",
							"\r",
							"pm.test(\"12: Response have property qa_salary_after_3.5_years\", function(){\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\")       \r",
							"});\r",
							"\r",
							"pm.test(\"13: Response have property person\", function(){\r",
							"    pm.expect(jsonData).to.have.property(\"person\")  \r",
							"});\r",
							"\r",
							"pm.test(\"14: start_qa_salary\",function(){\r",
							"    pm.expect(+jsonData.start_qa_salary).to.eql(+requestData.get(\"salary\"))\r",
							"});\r",
							"\r",
							"pm.test(\"15: qa_salary_after_6_months\",function(){\r",
							"    pm.expect(+jsonData.qa_salary_after_6_months).to.eql(+requestData.get(\"salary\") * 2)\r",
							"});\r",
							"\r",
							"pm.test(\"16: qa_salary_after_12_months\",function(){\r",
							"    pm.expect(+jsonData.qa_salary_after_12_months).to.eql(+requestData.get(\"salary\") * 2.7)\r",
							"});\r",
							"\r",
							"pm.test(\"17: qa_salary_after_1.5_year\",function(){\r",
							"    pm.expect(+jsonData[\"qa_salary_after_1.5_year\"]).to.eql(+requestData.get(\"salary\") * 3.3)\r",
							"});\r",
							"\r",
							"pm.test(\"18: qa_salary_after_3.5_years\",function(){\r",
							"    pm.expect(+jsonData[\"qa_salary_after_3.5_years\"]).to.eql(+requestData.get(\"salary\") * 3.8)\r",
							"});\r",
							"\r",
							"pm.test(\"19: U_name element 1 = salary\",function(){\r",
							"    pm.expect(+jsonData.person.u_name[1]).to.eql(+requestData.get(\"salary\"))\r",
							"});\r",
							"\r",
							"pm.test(\"20: U_age from response = request age\",function(){\r",
							"    pm.expect(+jsonData.person.u_age).to.eql(+requestData.get(\"age\"))\r",
							"});\r",
							"\r",
							"pm.test(\"21: u_salary_5_years\",function(){\r",
							"    pm.expect(+jsonData.person.u_salary_5_years).to.eql(+requestData.get(\"salary\") * 4.2)\r",
							"});\r",
							"\r",
							"for (const property in jsonData.person) {\r",
							"  console.log(`${property}: ${jsonData.person[property]}`);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}:{{port}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}